services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./init-multiple-dbs:/docker-entrypoint-initdb.d
    networks:
      - test-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    command: start-dev --import-realm --http-port=8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak?currentSchema=keycloak
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_HOSTNAME: keycloak
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - ./scripts/resources/rrs-waitque-realm.json:/opt/keycloak/data/import/rrs-waitque-realm.json
    networks:
      - test-net

  user-service:
    image: user-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
      WAITQUE_DB_PASSWORD: ${WAITQUE_DB_PASSWORD}
    depends_on:
      - postgres
      - keycloak
    ports:
      - "8081:8081"
    networks:
      - test-net

  company-service:
    image: company-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
      WAITQUE_DB_PASSWORD: ${WAITQUE_DB_PASSWORD}
      COMPANY_SERVICE_CLIENT_SECRET: ${COMPANY_SERVICE_CLIENT_SECRET}
    depends_on:
      - postgres
      - keycloak
    ports:
      - "8082:8082"
    networks:
      - test-net

  customer-service:
    image: customer-service:latest
    environment:
      SPRING_PROFILES_ACTIVE: docker
      WAITQUE_DB_PASSWORD: ${WAITQUE_DB_PASSWORD}
      CUSTOMER_SERVICE_CLIENT_SECRET: ${CUSTOMER_SERVICE_CLIENT_SECRET}
    depends_on:
      - postgres
      - keycloak
    ports:
      - "8083:8083"
    networks:
      - test-net

  test-runner:
    image: maven:3.9-eclipse-temurin-21
    working_dir: /app
    volumes:
      - ./customer-service:/app
      - ./scripts:/scripts
    depends_on:
      - user-service
      - company-service
      - customer-service
      - keycloak
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - test-net
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        echo "ðŸ•’ Waiting for dependencies to be ready..." &&
        /scripts/wait-for-it.sh postgres:5432 -t 60 &&
        /scripts/wait-for-it.sh keycloak:8080 -t 60 &&
        /scripts/wait-for-it.sh user-service:8081 -t 60 &&
        /scripts/wait-for-it.sh company-service:8082 -t 60 &&
        /scripts/wait-for-it.sh customer-service:8083 -t 60 &&
        echo "âœ… All services are up! Running integration tests..." &&
        mvn verify -Pintegration

networks:
  test-net:
    name: waitque-integration-net
    driver: bridge
